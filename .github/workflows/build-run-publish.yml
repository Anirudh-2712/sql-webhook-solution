name: Build, Run, and Publish JAR

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: write  # needed to push the built JAR back to the repo

jobs:
  build-run-publish:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        persist-credentials: true

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'maven'

    - name: Build with Maven
      run: mvn -B -U clean package

    - name: Run the app to produce real output (webhook + SQL + submit)
      env:
        SUBMITTER_NAME: ${{ secrets.SUBMITTER_NAME }}
        REG_NO: ${{ secrets.REG_NO }}
        EMAIL: ${{ secrets.EMAIL }}
      run: |
        set -e
        # Find the built jar
        JAR=$(ls target/*.jar | head -n 1)
        echo "Running $JAR"
        # Run with properties + force non-web so it exits
        java -Dapp.submitter.name="${SUBMITTER_NAME}" \
             -Dapp.submitter.regNo="${REG_NO}" \
             -Dapp.submitter.email="${EMAIL}" \
             -jar "$JAR" --spring.main.web-application-type=none \
          | tee run-log.txt

    - name: Upload run logs (for verification)
      uses: actions/upload-artifact@v4
      with:
        name: app-run-log
        path: run-log.txt

    - name: Publish compiled JAR to repo for raw link
      run: |
        set -e
        mkdir -p dist
        JAR=$(ls target/*.jar | head -n 1)
        # Use a stable name for a stable URL:
        cp "$JAR" dist/sql-webhook-solution.jar
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        # Only commit if changed
        if ! git diff --quiet --exit-code -- dist/sql-webhook-solution.jar; then
          git add dist/sql-webhook-solution.jar
          git commit -m "CI: publish compiled JAR"
          git push
        else
          echo "No changes to publish."
        fi
